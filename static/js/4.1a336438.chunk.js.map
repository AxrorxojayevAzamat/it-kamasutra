{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapToStatePropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messsagesElements","messages","m","dialogItems","values","sendMessage","dialogMessage","compose","dispatch","sendMessageCreator"],"mappings":"gMAIIA,EAA0B,SAACC,GAAD,MAAY,CACtCC,OAAQD,EAAME,KAAKD,SAaRE,IAVU,SAACC,GAAe,IAC/BC,EAD8B,uKAG5B,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHhB,GACJC,IAAML,WAMtC,OAAOM,YAAQX,EAARW,CAAiCL,K,oBCd5CM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,4B,+FCa7HC,EAVI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,QCDvBC,EALC,SAACd,GACb,OAAO,yBAAKS,UAAWC,IAAEK,SAAS,6BAAMf,EAAMe,W,iCCkB5CC,EAAmBC,YAAU,CAACC,KAAM,mBAAjBD,EAdL,SAACjB,GACjB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOR,KAAK,gBAAgBS,YAAY,oBAAoBC,UAAWC,IACvEC,SAAU,CAACC,QAEf,6BACI,6CA6BDC,EArBC,SAAC3B,GACb,IAAI4B,EAAkB5B,EAAM6B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAML,GAAIwB,EAAExB,QACrFyB,EAAoBjC,EAAM6B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASpB,QAASoB,EAAEpB,aAMhF,OACI,yBAAKN,UAAWC,IAAEoB,SACd,yBAAKrB,UAAWC,IAAE0B,aACbR,GAEL,yBAAKnB,UAAWC,IAAEwB,UACbD,EACD,kBAACjB,EAAD,CAAkBG,SAXL,SAACkB,GACtBrC,EAAMsC,YAAYD,EAAOE,eACzBF,EAAOE,cAAgB,S,wBCVhBC,sBACXrC,aAfoB,SAACV,GACrB,MAAO,CACHoC,YAAapC,EAAMoC,gBAIA,SAACY,GACxB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAOpC3C,IAFW4C,CAGbb","file":"static/js/4.1a336438.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nlet mapToStatePropsRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nconst withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props}/>\n        }\n    }\n    return connect(mapToStatePropsRedirect)(RedirectComponent);\n}\n\nexport default withAuthRedirect;\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\"};","import React from \"react\";\nimport s from '../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from \"react\";\nimport s from '../Dialogs.module.css';\n\nconst Message = (props) => {\n    return <div className={s.message}><pre>{props.message}</pre></div>\n}\n\n\nexport default Message;","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormControl/FormControl\";\nimport {required} from \"../../utils/validations/validate\";\n\nconst DialogsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"dialogMessage\" placeholder=\"Enter the message\" component={Textarea}\n                validate={[required]}/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst DialogsReduxForm = reduxForm({form: \"dialogsMessages\"})(DialogsForm)\n\nconst Dialogs = (props) => {\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\n    let messsagesElements = props.dialogsPage.messages.map(m => <Message message={m.message}/>)\n\n    let onSendMessageClick = (values) => {\n        props.sendMessage(values.dialogMessage);\n        values.dialogMessage = \"\"\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messsagesElements}\n                <DialogsReduxForm onSubmit={onSendMessageClick} />\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (dialogMessage) => {\n            dispatch(sendMessageCreator(dialogMessage))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)"],"sourceRoot":""}