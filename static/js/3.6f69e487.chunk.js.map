{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapToStatePropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateStatus","type","ProfileInfo","profile","owner","updateMainPhoto","className","s","descriptionBlock","src","photos","large","avatar","alt","files","length","fullName","Post","item","message","likesCount","maxLength","maxLengthOfFormControl","MyPostsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","name","placeholder","component","Textarea","validate","required","MyPosts","postsElements","posts","map","p","postsBlock","values","addPost","newPost","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","Preloader","ProfileContainer","userId","match","params","userAuthId","history","push","getProfile","getStatus","refreshPage","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.6f69e487.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nlet mapToStatePropsRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nconst withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props}/>\n        }\n    }\n    return connect(mapToStatePropsRedirect)(RedirectComponent);\n}\n\nexport default withAuthRedirect;\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHook = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    let activateInput = () => {\n        setEditMode(true)\n    }\n    let deactivateInput = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    let changeStatus = (e) => {\n        setStatus(e.target.value)\n    }\n\n    return (\n        <>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateInput}>{props.status || \"---No status!!!---\"}</span>\n            </div>}\n            {editMode &&\n            <div>\n                <input onChange={changeStatus} autoFocus={true} onBlur={deactivateInput} value={status} type=\"text\"/>\n            </div>}\n        </>\n    );\n\n}\n\nexport default ProfileStatusWithHook;","import React from 'react';\nimport s from './ProfileInfo.module.css';\n// import ProfileStatus from './ProfileStatus'\nimport avatar from \"../../../assets/images/avatar.png\"\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\n\nconst ProfileInfo = ({profile, status, updateStatus, owner, updateMainPhoto}) => {\n    const updatePhoto = (e) => {\n        if (e.target.files.length) {\n            updateMainPhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large || avatar} alt=\"\" className={s.avatar}/>\n                {owner && <input onChange={ updatePhoto } type=\"file\"/>}\n                <pre>\n                    <strong>Fullname: </strong> {profile.fullName}\n                    <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\n                </pre>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div  className={s.item}>\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSq_I0JFO2DxoAV3J-sI7ajtx0qW0Q5neaY_A&usqp=CAU\" alt=\"\"/>\n            {props.message} \n            <div>\n                <span>like {props.likesCount}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormControl/FormControl\";\nimport {maxLengthOfFormControl, required} from \"../../../utils/validations/validate\";\n\nconst maxLength = maxLengthOfFormControl(10)\n\nconst MyPostsForm = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field name=\"newPost\" placeholder=\"Post text\" component={Textarea} validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button>App post</button>\n            </div>\n        </form>\n    )\n}\n\nlet MyPostsReduxForm = reduxForm({form: \"myposts\"})(MyPostsForm)\n\nclass MyPosts extends React.Component {\n    render() {\n        let postsElements = this.props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\n\n        let addPost = (values) => {\n            this.props.addPost(values.newPost);\n            values.newPost = ''\n        }\n\n        return (\n            <div className={s.postsBlock}>\n                <h3>My posts</h3>\n\n                <div className={s.posts}>\n                    <MyPostsReduxForm onSubmit={addPost}/>\n                    {postsElements}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPost) => {\n            dispatch(addPostActionCreator(newPost))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nconst Profile = ({profile, updateStatus, status, owner, updateMainPhoto}) => {\n    if (!profile) return <Preloader/>\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={profile}\n                         updateStatus={updateStatus}\n                         status={status}\n                         owner={owner}\n                         updateMainPhoto={updateMainPhoto} />\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {getProfile, getStatus, updateMainPhoto, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\"\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    refreshPage() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.userAuthId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshPage()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshPage()\n        }\n    }\n\n    render() {\n        return <Profile {...this.props} owner={!this.props.match.params.userId} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        userAuthId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default compose(\n    connect( mapStateToProps, { getProfile, getStatus, updateStatus, updateMainPhoto }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}